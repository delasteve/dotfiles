set nocompatible
filetype off

" Vundle
if filereadable(expand("~/.dotfiles/vim/vundles.vim"))
  source ~/.dotfiles/vim/vundles.vim
endif

" Syntax highlighting
syntax on

" Encoding
set encoding=utf-8

" Color scheme
set t_Co=256
if filereadable(expand("~/.vim/bundle/base16-vim/colors/base16-default.vim"))
  colorscheme base16-tomorrow

  highlight linenr ctermfg=darkgrey ctermbg=black
  highlight cursorline ctermbg=232
  highlight cursorcolumn ctermbg=232
  highlight cursorlinenr ctermbg=232 ctermfg=white
  highlight Visual ctermbg=darkgrey
  highlight StatusLine ctermbg=232
  highlight Wildmenu ctermfg=black
  highlight SignifySignAdd ctermfg=green ctermbg=black
  highlight SignifySignDelete ctermfg=red ctermbg=black
  highlight SignifySignChange ctermfg=yellow ctermbg=black
  highlight clear SignColumn
endif

" Airline
set laststatus=2
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#branch#enabled=1
let g:airline_powerline_fonts=1
let g:airline_theme='dark'

" Syntastic
let g:syntastic_auto_loc_list=1
let g:syntastic_check_on_open=1
let g:syntastic_error_symbol = "✗"
let g:syntastic_warning_symbol = "⚠"
highlight SyntasticErrorSign ctermfg=red
highlight SyntasticWarningSign ctermfg=yellow
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_html_tidy_ignore_errors= ["proprietary attribute \"autofocus", "proprietary attribute \"ui-", "proprietary attribute \"ng-", "<form> proprietary attribute \"novalidate\"", "<form> lacks \"action\" attribute", "trimming empty <span>", "<input> proprietary attribute \"autofocus\"", "inserting implicit <span>", "<input> proprietary attribute \"required\"", "trimming empty <select>", "trimming empty <button>", "<html> proprietary attribute \"app\"", "proprietary attribute \"autocomplete\"", "trimming empty <i>", "proprietary attribute \"required\"", "proprietary attribute \"placeholder\"", "<ng-include> is not recognized!", "discarding unexpected <ng-include>", "missing </button>", "replacing unexpected button by </button>", "discarding unexpected </ng-include>"]

" UltiSnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigge="<s-tab>"

" Signify
let g:signify_vcs_list=['git', 'hg']
let g:signify_sign_add='+'
let g:signify_sign_delete='-'
let g:signify_sign_change='~'

" Autoindent
set autoindent
" Show line numbers
set nu
" Autoreload files
set autoread
" Yank and paste with the system clipboard
set clipboard=unnamed
" Highlight current line
set cul
" Show invisible characters
set list
" Set invisible characters to symbols
set listchars=tab:»\ ,trail:·
" Do not make a backup when overwriting a file
set nobackup
set nowritebackup
" Don't wrap lines
set nowrap
" No swap files
set noswapfile
" If we have a swap file, put it here.
set directory=~/.vim/.tmp,~/tmp,/tmp
" Show a navigable menu for tab completion
set wildmenu
" splitting feels more natural
set splitbelow
set splitright
set backspace=indent,eol,start

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

if has("autocmd")
  filetype on

  autocmd BufWinLeave *.* mkview
  autocmd BufWinEnter *.* silent loadview

  " Defaults should editorconfig not be used
  autocmd FileType html setlocal tabstop=2 shiftwidth=2 expandtab
  autocmd FileType css setlocal tabstop=2 shiftwidth=2 expandtab
  autocmd FileType javascript setlocal tabstop=2 shiftwidth=2 expandtab
  autocmd FileType zsh setlocal tabstop=2 shiftwidth=2 expandtab
  autocmd BufRead,BufNewFile *.md set filetype=markdown
  autocmd BufRead,BufNewFile *.md set spell
endif
